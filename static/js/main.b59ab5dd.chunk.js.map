{"version":3,"sources":["_context.js","util/functions.js","util/modal.js","components/movie-card/index.js","components/overlay/index.js","components/modal/index.js","App.js","index.js"],"names":["React","createContext","movies","modalClose","removeMovie","setMovie","setModal","filterText","text","replace","toLowerCase","split","map","charAt","toUpperCase","substring","join","msgText","msg","current","innerHTML","style","display","opacity","setTimeout","error","validator","ref","editMovie","a","async","title","value","filter","itm","Title","length","year","isNaN","runtime","genre","director","key","imdbID","editedMovieData","Year","Runtime","Genre","Director","Math","random","toString","modalForm","movieData","className","htmlFor","type","defaultValue","id","MovieCard","globalState","useContext","context","useRef","handleEdit","modalContent","modalButtons","onClick","movie","confirm","then","push","Overlay","show","overlay","Modal","buttons","children","href","App","useState","modal","state","setState","useEffect","fetch","res","json","data","Search","titles","Promise","all","isLoaded","active","content","store","newMovie","Provider","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b59ab5dd.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport default React.createContext({\r\n  movies: [],\r\n  modalClose: () => {},\r\n  removeMovie: () => {},\r\n  setMovie: () => {},\r\n  setModal: () => {}\r\n});\r\n","export const filterText = text => {\r\n  return text\r\n    .replace(/[0-9`~!@#$%^&*()_|+\\-=?;:'\",.<>”“\\{\\}\\[\\]\\\\\\/]/gi, \"\")\r\n    .toLowerCase()\r\n    .split(\" \")\r\n    .map(text => text.charAt(0).toUpperCase() + text.substring(1))\r\n    .join(\" \")\r\n    .replace(\"  \", \" \");\r\n};\r\n\r\nexport const msgText = (text, msg) => {\r\n  msg.current.innerHTML = text;\r\n  msg.current.style.display = \"block\";\r\n  msg.current.style.opacity = \"1\";\r\n  setTimeout(() => {\r\n    try {\r\n      msg.current.style.opacity = \"0\";\r\n      msg.current.style.display = \"table-column-group\";\r\n    } catch (error) {}\r\n  }, 4000);\r\n};\r\n\r\nexport const validator = async (movies, ref, editMovie) => {\r\n  if (ref.title.current.value === \"\") return { error: \"Title can't be empty!\" };\r\n  else if (\r\n    !editMovie &&\r\n    movies.filter(itm => itm.Title === ref.title.current.value).length > 0\r\n  )\r\n    return { error: \"Movie with same title already exist!\" };\r\n  else if (ref.year.current.value === \"\")\r\n    return { error: \"Year can't be empty!\" };\r\n  else if (isNaN(ref.year.current.value))\r\n    return { error: \"Year must be a number!\" };\r\n  else if (ref.runtime.current.value === \"\")\r\n    return { error: \"Runtime can't be empty!\" };\r\n  else if (isNaN(ref.runtime.current.value))\r\n    return { error: \"Runtime must be a number!\" };\r\n  else if (ref.genre.current.value === \"\")\r\n    return { error: \"Genre can't be empty!\" };\r\n  else if (ref.director.current.value === \"\")\r\n    return { error: \"Director can't be empty!\" };\r\n  else if (editMovie) {\r\n    const key = editMovie.imdbID;\r\n    const editedMovieData = movies.filter(itm => itm.imdbID === key)[0];\r\n    editedMovieData.Title = filterText(ref.title.current.value);\r\n    editedMovieData.Year = ref.year.current.value;\r\n    editedMovieData.Runtime =\r\n      ref.runtime.current.value.replace(\"min\", \"\") + \" min\";\r\n    editedMovieData.Genre = ref.genre.current.value;\r\n    editedMovieData.Director = ref.director.current.value;\r\n    return editedMovieData;\r\n  } else {\r\n    return {\r\n      imdbID: Math.random()\r\n        .toString(36)\r\n        .substring(7),\r\n      Title: filterText(ref.title.current.value),\r\n      Year: ref.year.current.value,\r\n      Runtime: ref.runtime.current.value.replace(\"min\", \"\") + \" min\",\r\n      Genre: ref.genre.current.value,\r\n      Director: ref.director.current.value\r\n    };\r\n  }\r\n};\r\n","import React from \"react\";\n\nexport const modalForm = (movieData, ref) => (\n  <>\n    <div className=\"msg\" ref={ref.msg}></div>\n    <label htmlFor=\"title\">Title :</label>\n    <input\n      type=\"text\"\n      defaultValue={movieData ? movieData.Title : \"\"}\n      ref={ref.title}\n      id=\"title\"\n    />\n\n    <label htmlFor=\"year\">Year :</label>\n    <input\n      type=\"text\"\n      defaultValue={movieData ? movieData.Year : \"\"}\n      ref={ref.year}\n      id=\"year\"\n    />\n\n    <label htmlFor=\"runtime\">Runtime :</label>\n    <input\n      type=\"text\"\n      defaultValue={movieData ? movieData.Runtime : \"\"}\n      ref={ref.runtime}\n      id=\"runtime\"\n    />\n\n    <label htmlFor=\"genre\">Genre :</label>\n    <input\n      type=\"text\"\n      defaultValue={movieData ? movieData.Genre : \"\"}\n      ref={ref.genre}\n      id=\"genre\"\n    />\n\n    <label htmlFor=\"director\">Director :</label>\n    <input\n      type=\"text\"\n      defaultValue={movieData ? movieData.Director : \"\"}\n      ref={ref.director}\n      id=\"director\"\n    />\n  </>\n);\n","import React, { useContext, useRef } from \"react\";\r\nimport \"./style.css\";\r\nimport context from \"../../_context\";\r\n\r\nimport { validator, msgText } from \"../../util/functions\";\r\n\r\nimport { modalForm } from \"../../util/modal\";\r\n\r\nconst MovieCard = () => {\r\n  const globalState = useContext(context);\r\n\r\n  const msg = useRef();\r\n  const title = useRef();\r\n  const year = useRef();\r\n  const runtime = useRef();\r\n  const genre = useRef();\r\n  const director = useRef();\r\n\r\n  const ref = { msg, title, year, runtime, genre, director };\r\n\r\n  const edit = movie => {\r\n    validator(globalState.movies, ref, movie).then(movie => {\r\n      if (movie.error) msgText(movie.error, msg);\r\n      else {\r\n        globalState.setMovie(movie);\r\n      }\r\n    });\r\n  };\r\n\r\n  const save = () => {\r\n    validator(globalState.movies, ref).then(movie => {\r\n      if (movie.error) msgText(movie.error, msg);\r\n      else {\r\n        globalState.movies.push(movie);\r\n        globalState.setMovie(movie);\r\n      }\r\n    });\r\n  };\r\n\r\n  const confirm = movie => {\r\n    const modalContent = `Are you sure, you want to delete \"${movie.Title}\" ?`;\r\n    const modalButtons = (\r\n      <>\r\n        <button\r\n          className=\"btn btn-small btn-primary mr-1\"\r\n          onClick={() => globalState.removeMovie(movie.imdbID)}\r\n        >\r\n          OK\r\n        </button>\r\n        <button\r\n          className=\"btn btn-small btn-danger\"\r\n          onClick={() => globalState.modalClose()}\r\n        >\r\n          Cancel\r\n        </button>\r\n      </>\r\n    );\r\n\r\n    globalState.setModal(true, modalContent, modalButtons);\r\n  };\r\n\r\n  const handleEdit = movieData => {\r\n    const modalContent = modalForm(movieData, ref);\r\n\r\n    const modalButtons = (\r\n      <>\r\n        <button\r\n          className=\"btn btn-small btn-danger-dark mr-1\"\r\n          onClick={() => confirm(movieData)}\r\n        >\r\n          Delete\r\n        </button>\r\n        <button\r\n          className=\"btn btn-small btn-danger mr-1\"\r\n          onClick={() => globalState.modalClose()}\r\n        >\r\n          Cancel\r\n        </button>\r\n        <button\r\n          className=\"btn btn-small btn-primary\"\r\n          onClick={() => {\r\n            movieData ? edit(movieData) : save();\r\n          }}\r\n        >\r\n          Update\r\n        </button>\r\n      </>\r\n    );\r\n\r\n    globalState.setModal(true, modalContent, modalButtons);\r\n  };\r\n\r\n  return globalState.movies.map(itm => (\r\n    <figure className=\"movie-card\" key={itm.imdbID}>\r\n      <div className=\"movie-info\">\r\n        <div className=\"movie-title\">\r\n          {itm.Title} <span> ({itm.Year})</span>\r\n        </div>\r\n        <div>\r\n          {itm.Runtime} | {itm.Genre}\r\n        </div>\r\n        <div className=\"movie-director\">Director: {itm.Director}</div>\r\n      </div>\r\n      <button className=\"btn btn-small\" onClick={() => handleEdit(itm)}>\r\n        Edit\r\n      </button>\r\n    </figure>\r\n  ));\r\n};\r\n\r\nexport default MovieCard;\r\n","import React, { useRef, useContext } from \"react\";\r\nimport context from \"../../_context\";\r\nimport \"./style.css\";\r\n\r\nconst Overlay = ({ show }) => {\r\n  const globalState = useContext(context);\r\n  let overlay = useRef();\r\n  if (!show) {\r\n    return null;\r\n  } else {\r\n    return (\r\n      <div\r\n        className=\"overlay\"\r\n        onClick={() => globalState.modalClose()}\r\n        ref={overlay}\r\n        style={{ display: \"block\" }}\r\n      ></div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default Overlay;\r\n","import React, { useContext } from \"react\";\nimport context from \"../../_context\";\n\nimport \"./style.css\";\n\nconst Modal = ({ show, title, buttons, children }) => {\n  const globalState = useContext(context);\n\n  if (!show) {\n    return null;\n  } else {\n    return (\n      <div className=\"modal\">\n        <div className=\"modal-header\">\n          <div className=\"model-title\">{title ? title : null}</div>\n          <a\n            href=\"#close\"\n            className=\"modal-close\"\n            onClick={() => globalState.modalClose()}\n          >\n            ×\n          </a>\n        </div>\n        <div className=\"modal-content\">{children ? children : null}</div>\n        <div className=\"modal-footer\">{buttons ? buttons : null}</div>\n      </div>\n    );\n  }\n};\n\nexport default Modal;\n","import React, { useState, useEffect, useRef } from \"react\";\nimport Context from \"./_context\";\nimport MovieCard from \"./components/movie-card\";\nimport Overlay from \"./components/overlay\";\nimport Modal from \"./components/modal\";\nimport { filterText, validator, msgText } from \"./util/functions\";\nimport \"./styles/App.css\";\n\nimport { modalForm } from \"./util/modal\";\n\nfunction App() {\n  const msg = useRef();\n  const title = useRef();\n  const year = useRef();\n  const runtime = useRef();\n  const genre = useRef();\n  const director = useRef();\n  const ref = { msg, title, year, runtime, genre, director };\n\n  const [state, setState] = useState({\n    movies: [],\n    modal: false\n  });\n\n  useEffect(() => {\n    const ApiKey = \"124af7f8\";\n    fetch(`https://www.omdbapi.com/?s=new&apikey=${ApiKey}`)\n      .then(res => res.json())\n      .then(data => {\n        const titles = data.Search.map(itm => itm.Title);\n        return titles;\n      })\n      .then(titles => {\n        return Promise.all(\n          titles.map(title => {\n            return fetch(\n              `https://www.omdbapi.com/?t=${title}&plot=full&apikey=${ApiKey}`\n            )\n              .then(res => res.json())\n              .then(data => data);\n          })\n        );\n      })\n      .then(data => {\n        setState({\n          ...state,\n          movies: data.map(itm => {\n            itm.Title = filterText(itm.Title);\n            return itm;\n          }),\n          isLoaded: true\n        });\n      });\n  }, []);\n\n  const removeMovie = id => {\n    setState({\n      ...state,\n      movies: state.movies.filter(itm => itm.imdbID !== id)\n    });\n  };\n\n  const setMovie = movie => {\n    setState({\n      ...state,\n      movie,\n      modal: { active: false }\n    });\n  };\n\n  const setModal = (active, content, buttons) => {\n    setState({\n      ...state,\n      modal: {\n        active: active,\n        content: content,\n        buttons: buttons\n      }\n    });\n  };\n\n  const modalClose = () => {\n    setState({ ...state, modal: { active: false } });\n  };\n\n  const store = {\n    movies: state.movies,\n    modalClose: () => modalClose(),\n    removeMovie: id => removeMovie(id),\n    setMovie: movie => setMovie(movie),\n    setModal: (active, content, buttons) => setModal(active, content, buttons)\n  };\n\n  const newMovie = () => {\n    const modalContent = modalForm(null, ref);\n\n    const save = () => {\n      validator(state.movies, ref).then(movie => {\n        if (movie.error) msgText(movie.error, msg);\n        else {\n          state.movies.push(movie);\n          setMovie(movie);\n        }\n      });\n    };\n\n    const modalButtons = (\n      <>\n        <button\n          className=\"btn btn-small btn-danger mr-1\"\n          onClick={() => modalClose()}\n        >\n          Cancel\n        </button>\n        <button className=\"btn btn-small btn-primary\" onClick={() => save()}>\n          Save\n        </button>\n      </>\n    );\n\n    setModal(true, modalContent, modalButtons);\n  };\n\n  return (\n    <Context.Provider value={store}>\n      <Overlay show={state.modal.active} />\n      <Modal show={state.modal.active} buttons={state.modal.buttons}>\n        {state.modal.content}\n      </Modal>\n      <div className=\"container\">\n        <MovieCard />\n      </div>\n      <button className=\"btn btn-flow\" onClick={() => newMovie()}>\n        +\n      </button>\n    </Context.Provider>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}